namespace GBHW2
{
    class Complex
    {
        #region Public Methods

        public Complex Plus(Complex complex)
        {
            Complex c = new Complex();
            c.Pe = _re + complex.Pe;
            c._im = _im + complex._im;
            return c;
        }

        public static Complex operator +(Complex complex1, Complex complex2)
        {
            return new Complex { Pe = complex1.Pe - complex2.Pe, Im = complex1.Im - complex2.Im };
        }
        public override string ToString()
        {
            return $"{_re} {_im}i";
        }
        #endregion
        #region Constructors
        public Complex() { }
        public Complex(double re, double im)
        {
            _re = re;
            this._im = im;
        }
        #endregion
        #region Fields
        private double _re;
        private double _im;
        #endregion
        #region Properties
        public double Pe
        {
            get { return _re; }
            set { _re = value; }
        }
        public double Im
        {
            get { return _im; }
            set { _im = value; }
        }        
        #endregion
    }
    class Program
    {
        static void Main(string[] args)
        {
            Complex complex1 = new Complex(5, -2);
            Complex complex2 = new Complex(-1, 3);

            Console.WriteLine($"Работа с комплексными числами {complex1} и {complex2}");
            Console.WriteLine($"Результат вычитания комплексных чисел {complex1 + complex2}");

            Console.ReadLine();
        }
    }
}
